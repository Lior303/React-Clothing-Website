{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"./shop.actions\";\nexport function* fetchCollectionsAsync() {\n  console.log('im a fired');\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  // this saga is listening to FETCH_COLLECTIONS_START action to take place\n  // when it does take place it invoke fetchCollectionsAsync this function\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/Lior Vaknin/Desktop/project-2-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsFailure","fetchCollectionsSuccess","fetchCollectionsAsync","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","catch","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,oBAAxB;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,+BAAR,EAAyCC,SAAzC,QAAyD,+BAAzD;AACA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,gBAA/D;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,QAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AAEAD,EAAAA,aAAa,CACRE,GADL,GAEKC,IAFL,CAEUC,QAAQ,IAAI;AACd,UAAMC,cAAc,GAAGZ,+BAA+B,CAACW,QAAD,CAAtD;AACAE,IAAAA,QAAQ,CAACV,uBAAuB,CAACS,cAAD,CAAxB,CAAR;AACH,GALL,EAMKE,KANL,CAMWC,KAAK,IAAIF,QAAQ,CAACX,uBAAuB,CAACa,KAAK,CAACC,OAAP,CAAxB,CAN5B;AAOH;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC;AACA;AACA,QAAMnB,SAAS,CACXC,eAAe,CAACmB,uBADL,EAEXd,qBAFW,CAAf;AAIH","sourcesContent":["import {takeEvery} from 'redux-saga/effects';\r\n\r\nimport ShopActionTypes from './shop.types';\r\nimport {convertCollectionsSnapshotToMap, firestore} from \"../../firebase/firebase.utils\";\r\nimport {fetchCollectionsFailure, fetchCollectionsSuccess} from \"./shop.actions\";\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    console.log('im a fired');\r\n\r\n    const collectionRef = firestore.collection('collections');\r\n\r\n    collectionRef\r\n        .get()\r\n        .then(snapshot => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n            dispatch(fetchCollectionsSuccess(collectionsMap));\r\n        })\r\n        .catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    // this saga is listening to FETCH_COLLECTIONS_START action to take place\r\n    // when it does take place it invoke fetchCollectionsAsync this function\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}