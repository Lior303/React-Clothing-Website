{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lior Vaknin\\\\Desktop\\\\project-2-clothing\\\\client\\\\src\\\\components\\\\stripe-button\\\\stripe-button.component.jsx\";\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { emptyCartAfterCheckout } from \"../../redux/cart/cart.actions\";\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nconst StripeCheckoutButton = ({\n  price,\n  emptyCartAfterCheckout\n}) => {\n  //stripe wants price in cents\n  const priceForStripe = price * 100;\n  const publishableKey = 'pk_test_51HqcWzJdokespcosNqz5jMUkjhU92nbcv1XaYhKYSnfhyoD0oWFUq5gRFRTOUrB6akkyUpGY2rHNcGkCaxdO37ZP00fGuP6xzi';\n\n  const onToken = token => {\n    axios({\n      url: 'payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token: token\n      }\n    }).then(response => {\n      emptyCartAfterCheckout();\n      alert('Payment Successful');\n    }).catch(error => {\n      console.log('Payment error: ', JSON.parse(error));\n      alert('There was en issue with your payment');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(StripeCheckout, {\n    token: onToken,\n    stripeKey: publishableKey,\n    label: \"Pay Now\",\n    name: \"React Clothing App\",\n    billingAddress: true,\n    shippingAddress: true,\n    image: \"https://svgshare.com/i/CUz.svg\",\n    description: `Your total is $${price}`,\n    amount: priceForStripe,\n    panelLabel: \"Pay Now\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_c = StripeCheckoutButton;\n\nconst mapDispatchStateToProps = dispatch => ({\n  emptyCartAfterCheckout: () => dispatch(emptyCartAfterCheckout())\n});\n\nexport default connect(null, mapDispatchStateToProps)(StripeCheckoutButton);\n\nvar _c;\n\n$RefreshReg$(_c, \"StripeCheckoutButton\");","map":{"version":3,"sources":["C:/Users/Lior Vaknin/Desktop/project-2-clothing/client/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","StripeCheckout","emptyCartAfterCheckout","connect","axios","StripeCheckoutButton","price","priceForStripe","publishableKey","onToken","token","url","method","data","amount","then","response","alert","catch","error","console","log","JSON","parse","mapDispatchStateToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAAQC,sBAAR,QAAqC,+BAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQJ,EAAAA;AAAR,CAAD,KAAqC;AAC9D;AACA,QAAMK,cAAc,GAAGD,KAAK,GAAG,GAA/B;AACA,QAAME,cAAc,GAAG,6GAAvB;;AAEA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACrBN,IAAAA,KAAK,CAAC;AACFO,MAAAA,GAAG,EAAE,SADH;AAEFC,MAAAA,MAAM,EAAE,MAFN;AAGFC,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEP,cADN;AAEFG,QAAAA,KAAK,EAAEA;AAFL;AAHJ,KAAD,CAAL,CAOGK,IAPH,CAOQC,QAAQ,IAAI;AAChBd,MAAAA,sBAAsB;AACtBe,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACH,KAVD,EAUGC,KAVH,CAUSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAA/B;AACAF,MAAAA,KAAK,CAAC,sCAAD,CAAL;AACH,KAbD;AAcH,GAfD;;AAiBA,sBACI,QAAC,cAAD;AACI,IAAA,KAAK,EAAER,OADX;AAEI,IAAA,SAAS,EAAED,cAFf;AAGI,IAAA,KAAK,EAAC,SAHV;AAII,IAAA,IAAI,EAAC,oBAJT;AAKI,IAAA,cAAc,MALlB;AAMI,IAAA,eAAe,MANnB;AAOI,IAAA,KAAK,EAAC,gCAPV;AAQI,IAAA,WAAW,EAAG,kBAAiBF,KAAM,EARzC;AASI,IAAA,MAAM,EAAEC,cATZ;AAUI,IAAA,UAAU,EAAC;AAVf;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CApCD;;KAAMF,oB;;AAsCN,MAAMmB,uBAAuB,GAAGC,QAAQ,KAAK;AACzCvB,EAAAA,sBAAsB,EAAE,MAAMuB,QAAQ,CAACvB,sBAAsB,EAAvB;AADG,CAAL,CAAxC;;AAIA,eAAeC,OAAO,CAAC,IAAD,EAAOqB,uBAAP,CAAP,CAAuCnB,oBAAvC,CAAf","sourcesContent":["import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport {emptyCartAfterCheckout} from \"../../redux/cart/cart.actions\";\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nconst StripeCheckoutButton = ({price, emptyCartAfterCheckout}) => {\r\n    //stripe wants price in cents\r\n    const priceForStripe = price * 100;\r\n    const publishableKey = 'pk_test_51HqcWzJdokespcosNqz5jMUkjhU92nbcv1XaYhKYSnfhyoD0oWFUq5gRFRTOUrB6akkyUpGY2rHNcGkCaxdO37ZP00fGuP6xzi';\r\n\r\n    const onToken = token => {\r\n        axios({\r\n            url: 'payment',\r\n            method: 'post',\r\n            data: {\r\n                amount: priceForStripe,\r\n                token: token\r\n            }\r\n        }).then(response => {\r\n            emptyCartAfterCheckout();\r\n            alert('Payment Successful');\r\n        }).catch(error => {\r\n            console.log('Payment error: ', JSON.parse(error));\r\n            alert('There was en issue with your payment');\r\n        });\r\n    };\r\n\r\n    return (\r\n        <StripeCheckout\r\n            token={onToken}\r\n            stripeKey={publishableKey}\r\n            label='Pay Now'\r\n            name='React Clothing App'\r\n            billingAddress\r\n            shippingAddress\r\n            image='https://svgshare.com/i/CUz.svg'\r\n            description={`Your total is $${price}`}\r\n            amount={priceForStripe}\r\n            panelLabel='Pay Now'\r\n        />\r\n    );\r\n};\r\n\r\nconst mapDispatchStateToProps = dispatch => ({\r\n    emptyCartAfterCheckout: () => dispatch(emptyCartAfterCheckout())\r\n});\r\n\r\nexport default connect(null, mapDispatchStateToProps)(StripeCheckoutButton);"]},"metadata":{},"sourceType":"module"}