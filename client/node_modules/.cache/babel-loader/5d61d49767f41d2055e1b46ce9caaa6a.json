{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lior Vaknin\\\\Desktop\\\\project-2-clothing\\\\src\\\\components\\\\collection-item\\\\collection-item.component.jsx\";\nimport React from 'react';\nimport './collection-item.styles.scss';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from \"react-redux\";\nimport { addItem } from \"../../redux/cart/cart.actions\";\n\nconst CollectionItem = ({\n  item,\n  addItem\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"collection-item\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image\",\n    style: {\n      backgroundImage: `url(${imageUrl})`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collection-footer\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"name\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"price\",\n      children: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n    inverted: true,\n    children: \"Add to cart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 5\n}, this); //if it is not equal to anything it is true --- for the inverted property\n\n\n_c = CollectionItem;\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionItem\");","map":{"version":3,"sources":["C:/Users/Lior Vaknin/Desktop/project-2-clothing/src/components/collection-item/collection-item.component.jsx"],"names":["React","CustomButton","connect","addItem","CollectionItem","item","backgroundImage","imageUrl","name","price","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,+BAAP;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,OAAR,QAAsB,+BAAtB;;AAEA,MAAMC,cAAc,GAAG,CACnB;AAACC,EAAAA,IAAD;AAAOF,EAAAA;AAAP,CADmB,kBAGnB;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA,0BAEI;AACA,IAAA,SAAS,EAAC,OADV;AAEA,IAAA,KAAK,EAAE;AACHG,MAAAA,eAAe,EAAG,OAAMC,QAAS;AAD9B;AAFP;AAAA;AAAA;AAAA;AAAA,UAFJ,eASI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,gBAAwBC;AAAxB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA,gBAAyBC;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UATJ,eAaI,QAAC,YAAD;AAAc,IAAA,QAAQ,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,C,CAqBA;;;KArBML,c;;AAuBN,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACpCR,EAAAA,OAAO,EAAEE,IAAI,IAAIM,QAAQ,CAACR,OAAO,CAACE,IAAD,CAAR;AADW,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CAAC,IAAD,EAAOQ,kBAAP,CAAP,CAAkCN,cAAlC,CAAf","sourcesContent":["import React from 'react'\r\nimport './collection-item.styles.scss'\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport { connect } from \"react-redux\";\r\nimport {addItem} from \"../../redux/cart/cart.actions\";\r\n\r\nconst CollectionItem = (\r\n    {item, addItem}\r\n) => (\r\n    <div className='collection-item'>\r\n\r\n        <div\r\n        className='image'\r\n        style={{\r\n            backgroundImage: `url(${imageUrl})`\r\n        }}\r\n        />\r\n\r\n        <div className='collection-footer'>\r\n            <span className='name'>{name}</span>\r\n            <span className='price'>{price}</span>\r\n        </div>\r\n        <CustomButton inverted>\r\n            Add to cart\r\n        </CustomButton>\r\n    </div>\r\n);\r\n//if it is not equal to anything it is true --- for the inverted property\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addItem: item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);"]},"metadata":{},"sourceType":"module"}