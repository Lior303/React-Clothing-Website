{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyB60UPbZyTeJDf9NtwRO3cwMEZdizGRZZQ\",\n  authDomain: \"reactclothingdb.firebaseapp.com\",\n  databaseURL: \"https://reactclothingdb.firebaseio.com\",\n  projectId: \"reactclothingdb\",\n  storageBucket: \"reactclothingdb.appspot.com\",\n  messagingSenderId: \"263545150829\",\n  appId: \"1:263545150829:web:8cab43f0c7a301a6a9ce64\",\n  measurementId: \"G-JW7GTV7DKE\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (userAuth) {\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const snapshot = await userRef.get();\n\n    if (!snapshot.exists) {\n      const {\n        displayName,\n        email\n      } = userAuth;\n      const createAt = new Date();\n\n      try {\n        await userRef.set({\n          displayName,\n          email,\n          createAt,\n          ...additionalData\n        });\n      } catch (error) {\n        console.log('error while creating user', error.message);\n      }\n    }\n\n    return userRef;\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  promt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/Lior Vaknin/Desktop/project-2-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapshot","get","exists","displayName","email","createAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","promt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,iCAFD;AAGXC,EAAAA,WAAW,EAAE,wCAHF;AAIXC,EAAAA,SAAS,EAAE,iBAJA;AAKXC,EAAAA,aAAa,EAAE,6BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAClC,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAChC,MAAID,QAAJ,EAAc;AACV,UAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,UAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AACA,QAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAClB,YAAM;AACFC,QAAAA,WADE;AACWC,QAAAA;AADX,UAEFV,QAFJ;AAGA,YAAMW,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;;AACA,UAAI;AACA,cAAMV,OAAO,CAACW,GAAR,CAAY;AACdJ,UAAAA,WADc;AAEdC,UAAAA,KAFc;AAGdC,UAAAA,QAHc;AAId,aAAGV;AAJW,SAAZ,CAAN;AAMH,OAPD,CAQA,OAAOa,KAAP,EAAc;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,KAAK,CAACG,OAA/C;AACH;AACJ;;AACD,WAAOf,OAAP;AACH;AACR,CAxBM;AA0BPb,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB;AAEA,OAAO,MAAM6B,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,KAAK,EAAE;AAAR,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe/B,QAAf","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyB60UPbZyTeJDf9NtwRO3cwMEZdizGRZZQ\",\r\n    authDomain: \"reactclothingdb.firebaseapp.com\",\r\n    databaseURL: \"https://reactclothingdb.firebaseio.com\",\r\n    projectId: \"reactclothingdb\",\r\n    storageBucket: \"reactclothingdb.appspot.com\",\r\n    messagingSenderId: \"263545150829\",\r\n    appId: \"1:263545150829:web:8cab43f0c7a301a6a9ce64\",\r\n    measurementId: \"G-JW7GTV7DKE\"\r\n};\r\n\r\nexport const createUserProfileDocument =\r\n    async (userAuth, additionalData) => {\r\n        if (userAuth) {\r\n            const userRef = firestore.doc(`users/${userAuth.uid}`)\r\n            const snapshot = await userRef.get();\r\n            if (!snapshot.exists) {\r\n                const {\r\n                    displayName, email\r\n                } = userAuth;\r\n                const createAt = new Date();\r\n                try {\r\n                    await userRef.set({\r\n                        displayName,\r\n                        email,\r\n                        createAt,\r\n                        ...additionalData\r\n                    })\r\n                }\r\n                catch (error) {\r\n                    console.log('error while creating user', error.message)\r\n                }\r\n            }\r\n            return userRef;\r\n        }\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({promt: 'select_account'});\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}